name: "Terraform - Deploy RG & Storage"  # Changed em-dash to hyphen

# Manual trigger only
on:
  workflow_dispatch:
    inputs: {}  # Optional, ensures GitHub UI renders correctly

jobs:
  terraform:
    runs-on: self-hosted  # Use your self-hosted agent

    env:
      TF_WORKING_DIR: '.'
      TF_PLAN_FILE: 'tfplan-rg-storage.bin'
      TF_STATE_FILE: 'rg-storage.tfstate'

    steps:
      # 1️⃣ Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.13.3'

      # 3️⃣ Terraform Init (local backend with dedicated state file)
      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform init \
            -backend-config="path=${{ env.TF_STATE_FILE }}"

      # 4️⃣ Terraform Plan
      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform plan -out="${{ env.TF_PLAN_FILE }}" \
            -var="subscription_id=${{ secrets.TF_SUBSCRIPTION_ID }}" \
            -var="client_id=${{ secrets.TF_CLIENT_ID }}" \
            -var="client_secret=${{ secrets.TF_CLIENT_SECRET }}" \
            -var="tenant_id=${{ secrets.TF_TENANT_ID }}"

      # 5️⃣ Terraform Apply
      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve "${{ env.TF_PLAN_FILE }}"

      # 6️⃣ Show outputs
      - name: Show Terraform Outputs
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform output
